{
  "E:\\ServerlessProject": {
    "versionSfCore": null,
    "versionFramework": "4.1.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {},
    "composeServiceName": null,
    "servicePath": "E:\\ServerlessProject",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "nundini",
      "app": "aws-node-project",
      "service": "crm-service",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "ap-south-1",
        "environment": {
          "DB_HOST": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
          "DB_USER": "admin",
          "DB_PASSWORD": "<REDACTED>",
          "DB_NAME": "task3"
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "CreateCustomerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/crm-service-dev-createCustomer"
              }
            },
            "GetCustomersLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/crm-service-dev-getCustomers"
              }
            },
            "UpdateCustomerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/crm-service-dev-updateCustomer"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "crm-service",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/crm-service-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/crm-service-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "crm-service",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                },
                "ManagedPolicyArns": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                      ]
                    ]
                  }
                ]
              }
            },
            "CreateCustomerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/crm-service/dev/1718712501010-2024-06-18T12:08:21.010Z/crm-service.zip"
                },
                "Handler": "handler.createCustomer",
                "Runtime": "nodejs20.x",
                "FunctionName": "crm-service-dev-createCustomer",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "DB_HOST": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                    "DB_USER": "admin",
                    "DB_PASSWORD": "<REDACTED>",
                    "DB_NAME": "task3"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "SubnetIds": [
                    "subnet-e646be9d"
                  ]
                }
              },
              "DependsOn": [
                "CreateCustomerLogGroup"
              ]
            },
            "GetCustomersLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/crm-service/dev/1718712501010-2024-06-18T12:08:21.010Z/crm-service.zip"
                },
                "Handler": "handler.getCustomers",
                "Runtime": "nodejs20.x",
                "FunctionName": "crm-service-dev-getCustomers",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "DB_HOST": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                    "DB_USER": "admin",
                    "DB_PASSWORD": "<REDACTED>",
                    "DB_NAME": "task3"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "SubnetIds": [
                    "subnet-e646be9d"
                  ]
                }
              },
              "DependsOn": [
                "GetCustomersLogGroup"
              ]
            },
            "UpdateCustomerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/crm-service/dev/1718712501010-2024-06-18T12:08:21.010Z/crm-service.zip"
                },
                "Handler": "handler.updateCustomer",
                "Runtime": "nodejs20.x",
                "FunctionName": "crm-service-dev-updateCustomer",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "DB_HOST": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                    "DB_USER": "admin",
                    "DB_PASSWORD": "<REDACTED>",
                    "DB_NAME": "task3"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "SubnetIds": [
                    "subnet-e646be9d"
                  ]
                }
              },
              "DependsOn": [
                "UpdateCustomerLogGroup"
              ]
            },
            "CreateCustomerLambdaVersionZtm7fZljBxv185Y3dUMwYrIl5ZYAdn1ESe6cPJoc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateCustomerLambdaFunction"
                },
                "CodeSha256": "GU2f0MRx7Sq1Zqbr9TOSLrafqQVUuyzo/zGDVia+8vc="
              }
            },
            "GetCustomersLambdaVersionSB9eqibGoWoaO4WIUz3QXIapgx4ZXbEzs2Rkv483c": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetCustomersLambdaFunction"
                },
                "CodeSha256": "GU2f0MRx7Sq1Zqbr9TOSLrafqQVUuyzo/zGDVia+8vc="
              }
            },
            "UpdateCustomerLambdaVersionfHDbB1HYHrjtRVmRe8fYT1rvMabL0FX4vvMxXDYfzA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateCustomerLambdaFunction"
                },
                "CodeSha256": "GU2f0MRx7Sq1Zqbr9TOSLrafqQVUuyzo/zGDVia+8vc="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-crm-service",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceCustomers": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "customers",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceCustomersCustomeridVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceCustomers"
                },
                "PathPart": "{customer_id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodCustomersPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceCustomers"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateCustomerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateCustomerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodCustomersGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceCustomers"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetCustomersLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetCustomersLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodCustomersCustomeridVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceCustomersCustomeridVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateCustomerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateCustomerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1718712498849": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodCustomersPost",
                "ApiGatewayMethodCustomersGet",
                "ApiGatewayMethodCustomersCustomeridVarPut"
              ]
            },
            "CreateCustomerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateCustomerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetCustomersLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetCustomersLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateCustomerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateCustomerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-crm-service-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateCustomerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateCustomerLambdaVersionZtm7fZljBxv185Y3dUMwYrIl5ZYAdn1ESe6cPJoc"
              },
              "Export": {
                "Name": "sls-crm-service-dev-CreateCustomerLambdaFunctionQualifiedArn"
              }
            },
            "GetCustomersLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetCustomersLambdaVersionSB9eqibGoWoaO4WIUz3QXIapgx4ZXbEzs2Rkv483c"
              },
              "Export": {
                "Name": "sls-crm-service-dev-GetCustomersLambdaFunctionQualifiedArn"
              }
            },
            "UpdateCustomerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateCustomerLambdaVersionfHDbB1HYHrjtRVmRe8fYT1rvMabL0FX4vvMxXDYfzA"
              },
              "Export": {
                "Name": "sls-crm-service-dev-UpdateCustomerLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-crm-service-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "createCustomer": {
          "handler": "handler.createCustomer",
          "timeout": 30,
          "vpc": {
            "securityGroupIds": [
              "sg-0f17942f8994fc08e"
            ],
            "subnetIds": [
              "subnet-e646be9d"
            ]
          },
          "events": [
            {
              "http": {
                "path": "customers",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "crm-service-dev-createCustomer",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs20.x",
          "versionLogicalId": "CreateCustomerLambdaVersionZtm7fZljBxv185Y3dUMwYrIl5ZYAdn1ESe6cPJoc"
        },
        "getCustomers": {
          "handler": "handler.getCustomers",
          "timeout": 30,
          "vpc": {
            "securityGroupIds": [
              "sg-0f17942f8994fc08e"
            ],
            "subnetIds": [
              "subnet-e646be9d"
            ]
          },
          "events": [
            {
              "http": {
                "path": "customers",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "crm-service-dev-getCustomers",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs20.x",
          "versionLogicalId": "GetCustomersLambdaVersionSB9eqibGoWoaO4WIUz3QXIapgx4ZXbEzs2Rkv483c"
        },
        "updateCustomer": {
          "handler": "handler.updateCustomer",
          "timeout": 30,
          "vpc": {
            "securityGroupIds": [
              "sg-0f17942f8994fc08e"
            ],
            "subnetIds": [
              "subnet-e646be9d"
            ]
          },
          "events": [
            {
              "http": {
                "path": "customers/{customer_id}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "crm-service-dev-updateCustomer",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs20.x",
          "versionLogicalId": "UpdateCustomerLambdaVersionfHDbB1HYHrjtRVmRe8fYT1rvMabL0FX4vvMxXDYfzA"
        }
      }
    },
    "serviceRawFile": "org: nundini\r\n\r\napp: aws-node-project\r\nservice: crm-service\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  region: ap-south-1\r\n  environment:\r\n    DB_HOST: database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com\r\n    DB_USER: admin\r\n    DB_PASSWORD: 09042002#Nk\r\n    DB_NAME: task3\r\n\r\nfunctions:\r\n  createCustomer:\r\n    handler: handler.createCustomer\r\n    timeout: 30 # Increased timeout\r\n    vpc:\r\n      securityGroupIds:\r\n        - sg-0f17942f8994fc08e\r\n      subnetIds:\r\n        - subnet-e646be9d\r\n    events:\r\n      - http:\r\n          path: customers\r\n          method: post\r\n\r\n  getCustomers:\r\n    handler: handler.getCustomers\r\n    timeout: 30 # Increased timeout\r\n    vpc:\r\n      securityGroupIds:\r\n        - sg-0f17942f8994fc08e\r\n      subnetIds:\r\n        - subnet-e646be9d\r\n    events:\r\n      - http:\r\n          path: customers\r\n          method: get\r\n\r\n  updateCustomer:\r\n    handler: handler.updateCustomer\r\n    timeout: 30 # Increased timeout\r\n    vpc:\r\n      securityGroupIds:\r\n        - sg-0f17942f8994fc08e\r\n      subnetIds:\r\n        - subnet-e646be9d\r\n    events:\r\n      - http:\r\n          path: customers/{customer_id}\r\n          method: put\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "0b5f41ee170cf55d460ef5cb87c3316b",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "80c1e4bd-eb72-4ddd-b43e-4ecc7c374e62",
    "orgName": "nundini",
    "userId": "pW9Bsbw44smdRyZTn3",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "TSd3GTwgNrf4NPyTFH",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "plantixnew",
    "subscription": null,
    "userEmail": "nundinikhanna@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "815469512242",
    "versionSf": "4.1.4",
    "serviceProviderAwsCfStackName": "crm-service-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-south-1:815469512242:stack/crm-service-dev/b87aadf0-2a2c-11ef-8e19-0290a64d20f9",
    "serviceProviderAwsCfStackCreated": "2024-06-14T09:01:43.455Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-18T12:08:37.473Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateCustomerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:815469512242:function:crm-service-dev-createCustomer:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-crm-service-dev-CreateCustomerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetCustomersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:815469512242:function:crm-service-dev-getCustomers:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-crm-service-dev-GetCustomersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateCustomerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:815469512242:function:crm-service-dev-updateCustomer:8",
        "Description": "Current Lambda function version",
        "ExportName": "sls-crm-service-dev-UpdateCustomerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://06wen9hpoh.execute-api.ap-south-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-crm-service-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "crm-service-dev-serverlessdeploymentbucket-wifhlaen8mqw",
        "ExportName": "sls-crm-service-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}