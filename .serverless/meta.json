{
  "E:\\ServerlessProject": {
    "versionSfCore": null,
    "versionFramework": "4.1.11",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "ssm-ap-south-1": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "plantix09",
            "app": "aws-node-project",
            "service": "crm-service",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "ap-south-1",
              "environment": {
                "SECRET_NAME": "<REDACTED>",
                "DB_NAME": "task3",
                "db_username": "admin",
                "db_password": "<REDACTED>",
                "db_engine": "mysql",
                "db_host": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                "db_port": "3306",
                "db_dbInstanceIdentifier": "database-task-3"
              },
              "vpc": {
                "securityGroupIds": [
                  "sg-0f17942f8994fc08e"
                ],
                "subnetIds": [
                  "subnet-e646be9d"
                ]
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "CreateCustomerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/crm-service-dev-createCustomer"
                    }
                  },
                  "GetCustomersLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/crm-service-dev-getCustomers"
                    }
                  },
                  "UpdateCustomerLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/crm-service-dev-updateCustomer"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "crm-service",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/crm-service-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/crm-service-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "crm-service",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "CreateCustomerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/crm-service/dev/1720426369324-2024-07-08T08:12:49.324Z/crm-service.zip"
                      },
                      "Handler": "index.createCustomerHandler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "crm-service-dev-createCustomer",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SECRET_NAME": "<REDACTED>",
                          "DB_NAME": "task3",
                          "db_username": "admin",
                          "db_password": "<REDACTED>",
                          "db_engine": "mysql",
                          "db_host": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                          "db_port": "3306",
                          "db_dbInstanceIdentifier": "database-task-3"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-0f17942f8994fc08e"
                        ],
                        "SubnetIds": [
                          "subnet-e646be9d"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateCustomerLogGroup"
                    ]
                  },
                  "GetCustomersLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/crm-service/dev/1720426369324-2024-07-08T08:12:49.324Z/crm-service.zip"
                      },
                      "Handler": "index.getCustomersHandler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "crm-service-dev-getCustomers",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SECRET_NAME": "<REDACTED>",
                          "DB_NAME": "task3",
                          "db_username": "admin",
                          "db_password": "<REDACTED>",
                          "db_engine": "mysql",
                          "db_host": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                          "db_port": "3306",
                          "db_dbInstanceIdentifier": "database-task-3"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-0f17942f8994fc08e"
                        ],
                        "SubnetIds": [
                          "subnet-e646be9d"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetCustomersLogGroup"
                    ]
                  },
                  "UpdateCustomerLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": {
                          "Ref": "ServerlessDeploymentBucket"
                        },
                        "S3Key": "serverless/crm-service/dev/1720426369324-2024-07-08T08:12:49.324Z/crm-service.zip"
                      },
                      "Handler": "index.updateCustomerHandler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "crm-service-dev-updateCustomer",
                      "MemorySize": 1024,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "SECRET_NAME": "<REDACTED>",
                          "DB_NAME": "task3",
                          "db_username": "admin",
                          "db_password": "<REDACTED>",
                          "db_engine": "mysql",
                          "db_host": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                          "db_port": "3306",
                          "db_dbInstanceIdentifier": "database-task-3"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-0f17942f8994fc08e"
                        ],
                        "SubnetIds": [
                          "subnet-e646be9d"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateCustomerLogGroup"
                    ]
                  },
                  "CreateCustomerLambdaVersionO0kFxCxEVpzTXMRg1f2uj8oEOPAm6lTYtkrBG1JO3M": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateCustomerLambdaFunction"
                      },
                      "CodeSha256": "tCxrKmNX+ytzB58r8cnLDAF/noBUwcoKc1i1VeGcrgk="
                    }
                  },
                  "GetCustomersLambdaVersiongn9P4lzOnwAG6Jbm6QbeaXMd37sYktQUwkUqQYPtLw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetCustomersLambdaFunction"
                      },
                      "CodeSha256": "tCxrKmNX+ytzB58r8cnLDAF/noBUwcoKc1i1VeGcrgk="
                    }
                  },
                  "UpdateCustomerLambdaVersionAsAaKtXgVWf48jIuwbCuGpbp29zhi7V3FU2m0Fs6pWc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateCustomerLambdaFunction"
                      },
                      "CodeSha256": "tCxrKmNX+ytzB58r8cnLDAF/noBUwcoKc1i1VeGcrgk="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-crm-service",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceCustomers": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "customers",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceCustomersCustomeridVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceCustomers"
                      },
                      "PathPart": "{customer_id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodCustomersPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceCustomers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateCustomerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CreateCustomerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodCustomersGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceCustomers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetCustomersLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetCustomersLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodCustomersCustomeridVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceCustomersCustomeridVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateCustomerLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "UpdateCustomerLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1720426362935": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodCustomersPost",
                      "ApiGatewayMethodCustomersGet",
                      "ApiGatewayMethodCustomersCustomeridVarPut"
                    ]
                  },
                  "CreateCustomerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateCustomerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetCustomersLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetCustomersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateCustomerLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateCustomerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LambdaExecutionRole": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": "LambdaExecutionPolicy",
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "secretsmanager:GetSecretValue",
                                  "secretsmanager:PutSecretValue",
                                  "rds:Connect",
                                  "logs:CreateLogGroup",
                                  "logs:CreateLogStream",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": "*"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    },
                    "Export": {
                      "Name": "sls-crm-service-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "CreateCustomerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateCustomerLambdaVersionO0kFxCxEVpzTXMRg1f2uj8oEOPAm6lTYtkrBG1JO3M"
                    },
                    "Export": {
                      "Name": "sls-crm-service-dev-CreateCustomerLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetCustomersLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetCustomersLambdaVersiongn9P4lzOnwAG6Jbm6QbeaXMd37sYktQUwkUqQYPtLw"
                    },
                    "Export": {
                      "Name": "sls-crm-service-dev-GetCustomersLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateCustomerLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateCustomerLambdaVersionAsAaKtXgVWf48jIuwbCuGpbp29zhi7V3FU2m0Fs6pWc"
                    },
                    "Export": {
                      "Name": "sls-crm-service-dev-UpdateCustomerLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-crm-service-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "coreCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ServerlessDeploymentBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketEncryption": {
                        "ServerSideEncryptionConfiguration": [
                          {
                            "ServerSideEncryptionByDefault": {
                              "SSEAlgorithm": "AES256"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "ServerlessDeploymentBucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "Bucket": {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "PolicyDocument": {
                        "Statement": [
                          {
                            "Action": "s3:*",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Resource": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    },
                                    "/*"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":s3:::",
                                    {
                                      "Ref": "ServerlessDeploymentBucket"
                                    }
                                  ]
                                ]
                              }
                            ],
                            "Condition": {
                              "Bool": {
                                "aws:SecureTransport": false
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": {
                      "Ref": "ServerlessDeploymentBucket"
                    }
                  }
                }
              }
            },
            "functions": {
              "createCustomer": {
                "handler": "index.createCustomerHandler",
                "timeout": 30,
                "vpc": {
                  "securityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "subnetIds": [
                    "subnet-e646be9d"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "customers",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "crm-service-dev-createCustomer",
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "versionLogicalId": "CreateCustomerLambdaVersionO0kFxCxEVpzTXMRg1f2uj8oEOPAm6lTYtkrBG1JO3M"
              },
              "getCustomers": {
                "handler": "index.getCustomersHandler",
                "timeout": 30,
                "vpc": {
                  "securityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "subnetIds": [
                    "subnet-e646be9d"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "customers",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "crm-service-dev-getCustomers",
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "versionLogicalId": "GetCustomersLambdaVersiongn9P4lzOnwAG6Jbm6QbeaXMd37sYktQUwkUqQYPtLw"
              },
              "updateCustomer": {
                "handler": "index.updateCustomerHandler",
                "timeout": 30,
                "vpc": {
                  "securityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "subnetIds": [
                    "subnet-e646be9d"
                  ]
                },
                "events": [
                  {
                    "http": {
                      "path": "customers/{customer_id}",
                      "method": "put",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "crm-service-dev-updateCustomer",
                "package": {},
                "memory": 1024,
                "runtime": "nodejs18.x",
                "versionLogicalId": "UpdateCustomerLambdaVersionAsAaKtXgVWf48jIuwbCuGpbp29zhi7V3FU2m0Fs6pWc"
              }
            },
            "resources": {
              "Resources": {
                "LambdaExecutionRole": {
                  "Type": "AWS::IAM::Role",
                  "Properties": {
                    "AssumeRolePolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "lambda.amazonaws.com"
                          },
                          "Action": "sts:AssumeRole"
                        }
                      ]
                    },
                    "Policies": [
                      {
                        "PolicyName": "LambdaExecutionPolicy",
                        "PolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                            {
                              "Effect": "Allow",
                              "Action": [
                                "secretsmanager:GetSecretValue",
                                "secretsmanager:PutSecretValue",
                                "rds:Connect",
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Resource": "*"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              "Outputs": {}
            },
            "package": {
              "include": [
                "index.js"
              ],
              "artifactsS3KeyDirname": "serverless/crm-service/dev/code-artifacts",
              "artifact": "E:\\ServerlessProject\\.serverless\\crm-service.zip",
              "artifactDirectoryName": "serverless/crm-service/dev/1720426369324-2024-07-08T08:12:49.324Z"
            }
          },
          "configFileDirPath": "E:\\ServerlessProject",
          "config": {
            "region": "ap-south-1",
            "type": "aws",
            "ssm": {
              "type": "ssm"
            }
          },
          "options": {},
          "stage": "dev",
          "dashboard": null
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "E:\\ServerlessProject",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "plantix09",
      "app": "aws-node-project",
      "service": "crm-service",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "ap-south-1",
        "environment": {
          "SECRET_NAME": "<REDACTED>",
          "DB_NAME": "task3",
          "db_username": "admin",
          "db_password": "<REDACTED>",
          "db_engine": "mysql",
          "db_host": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
          "db_port": "3306",
          "db_dbInstanceIdentifier": "database-task-3"
        },
        "vpc": {
          "securityGroupIds": [
            "sg-0f17942f8994fc08e"
          ],
          "subnetIds": [
            "subnet-e646be9d"
          ]
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "CreateCustomerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/crm-service-dev-createCustomer"
              }
            },
            "GetCustomersLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/crm-service-dev-getCustomers"
              }
            },
            "UpdateCustomerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/crm-service-dev-updateCustomer"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "crm-service",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/crm-service-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/crm-service-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "crm-service",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                },
                "ManagedPolicyArns": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                      ]
                    ]
                  }
                ]
              }
            },
            "CreateCustomerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/crm-service/dev/1720426369324-2024-07-08T08:12:49.324Z/crm-service.zip"
                },
                "Handler": "index.createCustomerHandler",
                "Runtime": "nodejs18.x",
                "FunctionName": "crm-service-dev-createCustomer",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SECRET_NAME": "<REDACTED>",
                    "DB_NAME": "task3",
                    "db_username": "admin",
                    "db_password": "<REDACTED>",
                    "db_engine": "mysql",
                    "db_host": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                    "db_port": "3306",
                    "db_dbInstanceIdentifier": "database-task-3"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "SubnetIds": [
                    "subnet-e646be9d"
                  ]
                }
              },
              "DependsOn": [
                "CreateCustomerLogGroup"
              ]
            },
            "GetCustomersLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/crm-service/dev/1720426369324-2024-07-08T08:12:49.324Z/crm-service.zip"
                },
                "Handler": "index.getCustomersHandler",
                "Runtime": "nodejs18.x",
                "FunctionName": "crm-service-dev-getCustomers",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SECRET_NAME": "<REDACTED>",
                    "DB_NAME": "task3",
                    "db_username": "admin",
                    "db_password": "<REDACTED>",
                    "db_engine": "mysql",
                    "db_host": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                    "db_port": "3306",
                    "db_dbInstanceIdentifier": "database-task-3"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "SubnetIds": [
                    "subnet-e646be9d"
                  ]
                }
              },
              "DependsOn": [
                "GetCustomersLogGroup"
              ]
            },
            "UpdateCustomerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/crm-service/dev/1720426369324-2024-07-08T08:12:49.324Z/crm-service.zip"
                },
                "Handler": "index.updateCustomerHandler",
                "Runtime": "nodejs18.x",
                "FunctionName": "crm-service-dev-updateCustomer",
                "MemorySize": 1024,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "SECRET_NAME": "<REDACTED>",
                    "DB_NAME": "task3",
                    "db_username": "admin",
                    "db_password": "<REDACTED>",
                    "db_engine": "mysql",
                    "db_host": "database-task-3.cjooxentiz3z.ap-south-1.rds.amazonaws.com",
                    "db_port": "3306",
                    "db_dbInstanceIdentifier": "database-task-3"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-0f17942f8994fc08e"
                  ],
                  "SubnetIds": [
                    "subnet-e646be9d"
                  ]
                }
              },
              "DependsOn": [
                "UpdateCustomerLogGroup"
              ]
            },
            "CreateCustomerLambdaVersionO0kFxCxEVpzTXMRg1f2uj8oEOPAm6lTYtkrBG1JO3M": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateCustomerLambdaFunction"
                },
                "CodeSha256": "tCxrKmNX+ytzB58r8cnLDAF/noBUwcoKc1i1VeGcrgk="
              }
            },
            "GetCustomersLambdaVersiongn9P4lzOnwAG6Jbm6QbeaXMd37sYktQUwkUqQYPtLw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetCustomersLambdaFunction"
                },
                "CodeSha256": "tCxrKmNX+ytzB58r8cnLDAF/noBUwcoKc1i1VeGcrgk="
              }
            },
            "UpdateCustomerLambdaVersionAsAaKtXgVWf48jIuwbCuGpbp29zhi7V3FU2m0Fs6pWc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateCustomerLambdaFunction"
                },
                "CodeSha256": "tCxrKmNX+ytzB58r8cnLDAF/noBUwcoKc1i1VeGcrgk="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-crm-service",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceCustomers": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "customers",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceCustomersCustomeridVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceCustomers"
                },
                "PathPart": "{customer_id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodCustomersPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceCustomers"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateCustomerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateCustomerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodCustomersGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceCustomers"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetCustomersLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetCustomersLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodCustomersCustomeridVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceCustomersCustomeridVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateCustomerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateCustomerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1720426362935": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodCustomersPost",
                "ApiGatewayMethodCustomersGet",
                "ApiGatewayMethodCustomersCustomeridVarPut"
              ]
            },
            "CreateCustomerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateCustomerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetCustomersLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetCustomersLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateCustomerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateCustomerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LambdaExecutionRole": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "lambda.amazonaws.com"
                      },
                      "Action": "sts:AssumeRole"
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": "LambdaExecutionPolicy",
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "secretsmanager:GetSecretValue",
                            "secretsmanager:PutSecretValue",
                            "rds:Connect",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                          ],
                          "Resource": "*"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-crm-service-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateCustomerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateCustomerLambdaVersionO0kFxCxEVpzTXMRg1f2uj8oEOPAm6lTYtkrBG1JO3M"
              },
              "Export": {
                "Name": "sls-crm-service-dev-CreateCustomerLambdaFunctionQualifiedArn"
              }
            },
            "GetCustomersLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetCustomersLambdaVersiongn9P4lzOnwAG6Jbm6QbeaXMd37sYktQUwkUqQYPtLw"
              },
              "Export": {
                "Name": "sls-crm-service-dev-GetCustomersLambdaFunctionQualifiedArn"
              }
            },
            "UpdateCustomerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateCustomerLambdaVersionAsAaKtXgVWf48jIuwbCuGpbp29zhi7V3FU2m0Fs6pWc"
              },
              "Export": {
                "Name": "sls-crm-service-dev-UpdateCustomerLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-crm-service-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        }
      },
      "functions": {
        "createCustomer": {
          "handler": "index.createCustomerHandler",
          "timeout": 30,
          "vpc": {
            "securityGroupIds": [
              "sg-0f17942f8994fc08e"
            ],
            "subnetIds": [
              "subnet-e646be9d"
            ]
          },
          "events": [
            {
              "http": {
                "path": "customers",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "crm-service-dev-createCustomer",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs18.x",
          "versionLogicalId": "CreateCustomerLambdaVersionO0kFxCxEVpzTXMRg1f2uj8oEOPAm6lTYtkrBG1JO3M"
        },
        "getCustomers": {
          "handler": "index.getCustomersHandler",
          "timeout": 30,
          "vpc": {
            "securityGroupIds": [
              "sg-0f17942f8994fc08e"
            ],
            "subnetIds": [
              "subnet-e646be9d"
            ]
          },
          "events": [
            {
              "http": {
                "path": "customers",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "crm-service-dev-getCustomers",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs18.x",
          "versionLogicalId": "GetCustomersLambdaVersiongn9P4lzOnwAG6Jbm6QbeaXMd37sYktQUwkUqQYPtLw"
        },
        "updateCustomer": {
          "handler": "index.updateCustomerHandler",
          "timeout": 30,
          "vpc": {
            "securityGroupIds": [
              "sg-0f17942f8994fc08e"
            ],
            "subnetIds": [
              "subnet-e646be9d"
            ]
          },
          "events": [
            {
              "http": {
                "path": "customers/{customer_id}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "crm-service-dev-updateCustomer",
          "package": {},
          "memory": 1024,
          "runtime": "nodejs18.x",
          "versionLogicalId": "UpdateCustomerLambdaVersionAsAaKtXgVWf48jIuwbCuGpbp29zhi7V3FU2m0Fs6pWc"
        }
      },
      "resources": {
        "Resources": {
          "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LambdaExecutionPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "secretsmanager:GetSecretValue",
                          "secretsmanager:PutSecretValue",
                          "rds:Connect",
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {}
      },
      "package": {
        "include": [
          "index.js"
        ],
        "artifactsS3KeyDirname": "serverless/crm-service/dev/code-artifacts",
        "artifact": "E:\\ServerlessProject\\.serverless\\crm-service.zip",
        "artifactDirectoryName": "serverless/crm-service/dev/1720426369324-2024-07-08T08:12:49.324Z"
      }
    },
    "serviceRawFile": "org: plantix09\r\napp: aws-node-project\r\nservice: crm-service\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: ap-south-1\r\n  environment:\r\n    SECRET_NAME: AppBeta\r\n    DB_NAME: task3\r\n    db_username: ${ssm:/project/aws-node/db_username}\r\n    db_password: ${ssm:/project/aws-node/db_password}\r\n    db_engine: ${ssm:/project/aws-node/db_engine}\r\n    db_host: ${ssm:/project/aws-node/db_host}\r\n    db_port: ${ssm:/project/aws-node/db_port}\r\n    db_dbInstanceIdentifier: ${ssm:/project/aws-node/db_dbInstanceIdentifier}\r\n  vpc:\r\n    securityGroupIds:\r\n      - sg-0f17942f8994fc08e\r\n    subnetIds:\r\n      - subnet-e646be9d\r\n\r\nfunctions:\r\n  createCustomer:\r\n    handler: index.createCustomerHandler\r\n    timeout: 30\r\n    vpc:\r\n      securityGroupIds:\r\n        - sg-0f17942f8994fc08e\r\n      subnetIds:\r\n        - subnet-e646be9d\r\n    events:\r\n      - http:\r\n          path: customers\r\n          method: post\r\n\r\n  getCustomers:\r\n    handler: index.getCustomersHandler\r\n    timeout: 30\r\n    vpc:\r\n      securityGroupIds:\r\n        - sg-0f17942f8994fc08e\r\n      subnetIds:\r\n        - subnet-e646be9d\r\n    events:\r\n      - http:\r\n          path: customers\r\n          method: get\r\n\r\n  updateCustomer:\r\n    handler: index.updateCustomerHandler\r\n    timeout: 30\r\n    vpc:\r\n      securityGroupIds:\r\n        - sg-0f17942f8994fc08e\r\n      subnetIds:\r\n        - subnet-e646be9d\r\n    events:\r\n      - http:\r\n          path: customers/{customer_id}\r\n          method: put\r\n\r\nresources:\r\n  Resources:\r\n    LambdaExecutionRole:\r\n      Type: AWS::IAM::Role\r\n      Properties:\r\n        AssumeRolePolicyDocument:\r\n          Version: \"2012-10-17\"\r\n          Statement:\r\n            - Effect: \"Allow\"\r\n              Principal:\r\n                Service: \"lambda.amazonaws.com\"\r\n              Action: \"sts:AssumeRole\"\r\n        Policies:\r\n          - PolicyName: \"LambdaExecutionPolicy\"\r\n            PolicyDocument:\r\n              Version: \"2012-10-17\"\r\n              Statement:\r\n                - Effect: \"Allow\"\r\n                  Action:\r\n                    - \"secretsmanager:GetSecretValue\"\r\n                    - \"secretsmanager:PutSecretValue\"\r\n                    - \"rds:Connect\"\r\n                    - \"logs:CreateLogGroup\"\r\n                    - \"logs:CreateLogStream\"\r\n                    - \"logs:PutLogEvents\"\r\n                  Resource: \"*\"\r\n\r\npackage:\r\n  include:\r\n    - index.js\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "0b5f41ee170cf55d460ef5cb87c3316b",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "b48f3153-5c08-4de6-96e8-92fce9106914",
    "orgName": "plantix09",
    "userId": "7BpRgLMF4QX0XnJ8sD",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "DsJKCSpWwST97znqS0",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "plantix09",
    "subscription": null,
    "userEmail": "nundini.khanna@plantix.net",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "815469512242",
    "versionSf": "4.1.11",
    "serviceProviderAwsCfStackName": "crm-service-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-south-1:815469512242:stack/crm-service-dev/b87aadf0-2a2c-11ef-8e19-0290a64d20f9",
    "serviceProviderAwsCfStackCreated": "2024-06-14T09:01:43.455Z",
    "serviceProviderAwsCfStackUpdated": "2024-07-08T08:12:53.852Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateCustomerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:815469512242:function:crm-service-dev-createCustomer:28",
        "Description": "Current Lambda function version",
        "ExportName": "sls-crm-service-dev-CreateCustomerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetCustomersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:815469512242:function:crm-service-dev-getCustomers:28",
        "Description": "Current Lambda function version",
        "ExportName": "sls-crm-service-dev-GetCustomersLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateCustomerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:815469512242:function:crm-service-dev-updateCustomer:27",
        "Description": "Current Lambda function version",
        "ExportName": "sls-crm-service-dev-UpdateCustomerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://06wen9hpoh.execute-api.ap-south-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-crm-service-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "crm-service-dev-serverlessdeploymentbucket-wifhlaen8mqw",
        "ExportName": "sls-crm-service-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}